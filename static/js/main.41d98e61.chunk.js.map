{"version":3,"sources":["components/footer/Footer.jsx","components/header/Header.jsx","components/error/Error.jsx","components/questions/Questions.jsx","pages/game/Game.jsx","services/Categories.jsx","pages/home/Home.jsx","pages/result/Result.jsx","App.js","index.js"],"names":["Footer","Navbar","expand","variant","bg","fixed","Container","fluid","Brand","href","className","Nav","icon","faGithub","size","faLinkedin","Header","Toggle","Collapse","Text","localStorage","getItem","Error","children","style","width","padding","marginBottom","borderRadius","backgroundColor","textAlign","justifyContent","color","textTransform","Question","currQues","setCurrQues","questions","options","correct","score","setScore","setQuestions","useState","selected","setSelected","error","setError","handleSelect","i","navigate","useNavigate","dangerouslySetInnerHTML","__html","question","map","onClick","handleCheck","disabled","Button","Game","name","setOptions","useEffect","length","handleShuffle","correct_answer","incorrect_answers","sort","Math","random","category","Spinner","animation","Categories","id","Home","setName","fetchQuestions","setCategory","difficulty","setDifficulty","type","setType","handleSubmit","alignItems","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","e","target","value","as","custom","cat","Result","App","setItem","a","axios","get","data","results","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41d98e61.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\" fixed=\"bottom\">\r\n      <Container fluid>\r\n        <Navbar.Brand>\r\n          App created using &nbsp;\r\n          <a href=\"https://opentdb.com/\" className=\"header-small-info\">\r\n            {\"\"}\r\n            Open Trivia Database\r\n          </a>\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Navbar.Brand href=\"https://github.com/AvramIonel/trivia-otd.git\">\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n          </Navbar.Brand>\r\n          <Navbar.Brand href=\"https://www.linkedin.com/in/ionel-florin-avram-94a2715b\">\r\n            <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n          </Navbar.Brand>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n  //   <Navbar expand=\"lg\" variant=\"light\" bg=\"dark\" fixed=\"top\">\r\n  //   <Navbar.Brand>Trivia Tests</Navbar.Brand>\r\n  //   <Navbar.Toggle />\r\n  //   <Navbar.Collapse className=\"justify-content-end\">\r\n  //     <Navbar.Text>\r\n  //       Signed in as: <a href=\"#login\">AIF</a>\r\n  //     </Navbar.Text>\r\n  //   </Navbar.Collapse>\r\n  // </Navbar>\r\n  <Navbar variant='dark' bg='dark' fixed='top'>\r\n  <Container fluid>\r\n    <Navbar.Brand href=\"/\">Trivia APP</Navbar.Brand>\r\n    <Navbar.Toggle />\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n      <Navbar.Text>\r\n        Player name: <a>{localStorage.getItem(\"playerValueInLocalStorage\")}</a>\r\n      </Navbar.Text>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\n// Component created to reuse in app every time we need to display an error\r\nconst Error = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"50%\",\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 4,\r\n        backgroundColor: \"#ffc107\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        textTransform: \"capitalize\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Error from \"../../components/error/Error\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./questions.css\";\r\n\r\n// This component is for the GAME page, and gives most of the styles of app and a big part of it`s functionality\r\nconst Question = ({\r\n  currQues,\r\n  setCurrQues,\r\n  questions,\r\n  options,\r\n  correct,\r\n  score,\r\n  setScore,\r\n  setQuestions,\r\n}) => {\r\n  const [selected, setSelected] = useState();\r\n  const [error, setError] = useState(false);\r\n\r\n  // For some style based on the correct answer, used React Bootstrap buttons style - see in css\r\n  const handleSelect = (i) => {\r\n    if (selected === i && selected === correct) {\r\n      return \"select\";\r\n    } else if (selected === i && selected !== correct) {\r\n      return \"wrong\";\r\n    } else if (i === correct) {\r\n      return \"select\";\r\n    }\r\n  };\r\n  // This take care of the score\r\n  const handleCheck = (i) => {\r\n    setSelected(i);\r\n    if (i === correct) setScore(score + 1);\r\n    setError(false);\r\n  };\r\n  // For quiting the quiz\r\n  const handleQuit = () => {\r\n    setCurrQues(0);\r\n    setQuestions();\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  // We need this in order to go to the next question and also to set an error if we don`t give any answer\r\n  const handleNext = () => {\r\n    if (currQues > 8) {\r\n      navigate(\"/result\");\r\n    } else if (selected) {\r\n      setCurrQues(currQues + 1);\r\n      setSelected();\r\n    } else {\r\n      setError(\"Please select an option first\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <h1>Question {currQues + 1}</h1>\r\n      {error && <Error>Please select one answer</Error>}\r\n      <div className=\"singleQuestion\">\r\n        {questions[currQues] && (\r\n          <h2\r\n            dangerouslySetInnerHTML={{ __html: questions[currQues].question }}\r\n          ></h2>\r\n        )}\r\n        <div className=\"options\">\r\n          {options &&\r\n            options.map((i) => (\r\n              <button\r\n                variant=\"outline-dark\"\r\n                onClick={() => handleCheck(i)}\r\n                className={` singleOption ${selected && handleSelect(i)}`}\r\n                key={i}\r\n                disabled={selected}\r\n              >\r\n                <div dangerouslySetInnerHTML={{ __html: i }}></div>\r\n              </button>\r\n            ))}\r\n        </div>\r\n        <div className=\"controls\">\r\n          <Button variant=\"warning\" href=\"/\" onClick={handleQuit}>\r\n            Quit\r\n          </Button>\r\n          <Button variant=\"success\" onClick={handleNext}>\r\n            {currQues > 8 ? \"Submit\" : \"Next Question\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// Used dangerouslySetInnerHTML to get rid of special caracters obtained from the database in my app\r\nexport default Question;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Question from \"../../components/questions/Questions\";\r\nimport \"./game.css\";\r\n\r\n// This page is what the user see in the game - all the data the users sees is from virtual DOM - nothing is hardcoded\r\nconst Game = ({ name, questions, score, setScore, setQuestions }) => {\r\n  const [options, setOptions] = useState();\r\n  const [currQues, setCurrQues] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (questions && questions.length > 0) {\r\n      setOptions(\r\n        handleShuffle([\r\n          questions[currQues]?.correct_answer,\r\n          ...questions[currQues]?.incorrect_answers,\r\n        ])\r\n      );\r\n    }\r\n  }, [currQues, questions]);\r\n\r\n  // Here we shuffle the answers so the correct answer it has a random position everytime\r\n  const handleShuffle = (options) => {\r\n    return options.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <span className=\"subtitle\">Welcome, {name}</span>\r\n      {questions ? (\r\n        <>\r\n          <div className=\"quizInfo\">\r\n            <span>{questions[currQues]?.category}</span>\r\n            <span>Score: {score}</span>\r\n          </div>\r\n\r\n          <Question\r\n            currQues={currQues}\r\n            setCurrQues={setCurrQues}\r\n            questions={questions}\r\n            options={options}\r\n            correct={questions[currQues]?.correct_answer}\r\n            score={score}\r\n            setScore={setScore}\r\n            setQuestions={setQuestions}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Spinner animation=\"border\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export const Categories = [\r\n  { id: 9, name: \"General Knowledge\" },\r\n  { id: 10, name: \"Entertainment: Books\" },\r\n  { id: 11, name: \"Entertainment: Film\" },\r\n  { id: 12, name: \"Entertainment: Music\" },\r\n  // { id: 13, name: \"Entertainment: Musicals & Theatres\" },\r\n  { id: 14, name: \"Entertainment: Television\" },\r\n  { id: 15, name: \"Entertainment: Video Games\" },\r\n  { id: 16, name: \"Entertainment: Board Games\" },\r\n  { id: 17, name: \"Science & Nature\" },\r\n  { id: 18, name: \"Science: Computers\" },\r\n  { id: 19, name: \"Science: Mathematics\" },\r\n  { id: 20, name: \"Mythology\" },\r\n  { id: 21, name: \"Sports\" },\r\n  { id: 22, name: \"Geography\" },\r\n  { id: 23, name: \"History\" },\r\n  // { id: 24, name: \"Politics\" },\r\n  // { id: 25, name: \"Art\" }, - dosen`t work\r\n  { id: 26, name: \"Celebrities\" },\r\n  { id: 27, name: \"Animals\" },\r\n  { id: 28, name: \"Vehicles\" },\r\n  { id: 29, name: \"Entertainment: Comics\" },\r\n  // { id: 30, name: \"Science: Gadgets\" },\r\n  { id: 31, name: \"Entertainment: Japanese Anime & Manga\" },\r\n  { id: 32, name: \"Entertainment: Cartoon & Animations\" },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Categories } from \"../../services/Categories\";\r\nimport Error from \"../../components/error/Error\";\r\nimport \"./home.css\";\r\n\r\n// This page is the form from Bootstrap ^5.1.3 for selecting the category, dificulty and type of answers\r\nconst Home = ({ name, setName, fetchQuestions }) => {\r\n  const [category, setCategory] = useState();\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // This sends us to the quiz\r\n  const handleSubmit = () => {\r\n    if (!category || !difficulty || !type || !name) {\r\n      setError(true);\r\n      return;\r\n    } else {\r\n      setError(false);\r\n      fetchQuestions(category, difficulty, type);\r\n      navigate(\"/quiz\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      {/* I`ll use the QuizForm and some local storage for name and score */}\r\n      <div>\r\n        <div className=\"settings\">\r\n          <span style={({ fontSize: 25 }, { alignItems: \"center\" })}>\r\n            Quiz Settings\r\n          </span>\r\n        </div>\r\n        {error && <Error>Please Fill all the feilds</Error>}\r\n        <div className=\"settings__select\">\r\n          <Form className=\"quiz-form\" onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Your Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Please enter your name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCategories\">\r\n              <Form.Label>Select Category</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"sm\"\r\n                custom\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                value={category}\r\n              >\r\n                <option value=\"\">Any</option>\r\n                {Categories.map((cat) => (\r\n                  <option key={cat.name + cat.id} value={cat.id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicDifficulty\">\r\n              <Form.Label>Select Difficulty</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"sm\"\r\n                custom\r\n                onChange={(e) => setDifficulty(e.target.value)}\r\n                value={difficulty}\r\n              >\r\n                <option value=\"\">Any</option>\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"hard\">Hard</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\r\n              <Form.Label>Select type of answer</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"sm\"\r\n                custom\r\n                onChange={(e) => setType(e.target.value)}\r\n                value={type}\r\n              >\r\n                <option value=\"\">Any</option>\r\n                <option value=\"multiple\">Multiple Choice</option>\r\n                <option value=\"boolean\">True/Fale</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n          Start Quiz\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\n// This page is for displaing the score to the user\r\nconst Result = ({ name, score }) => {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!name) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [name, navigate]);\r\n  return (\r\n    <div\r\n      style={\r\n        ({ display: \"flex\" },\r\n        { flexDirection: \"column\" },\r\n        { justifyContent: \"space-around\" },\r\n        { alignItems: \"center\" },\r\n        { padding: \"20px\" })\r\n      }\r\n    >\r\n      <span style={({ alignItems: \"center\" }, { padding: \"15px\" })}>\r\n        Final Score: {score}\r\n      </span>\r\n      <Button variant=\"primary\" href=\"/\">\r\n        Go to Home Page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes as Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Footer from \"./components/footer/Footer\";\nimport Header from \"./components/header/Header\";\nimport Game from \"./pages/game/Game\";\nimport Home from \"./pages/home/Home\";\nimport Result from \"./pages/result/Result\";\n\nfunction App() {\n  const [questions, setQuestions] = useState(\"\");\n  const [name, setName] = useState(\n    localStorage.getItem(\"playerValueInLocalStorage\") || \"\"\n  );\n  useEffect(() => {\n    localStorage.setItem(\"playerValueInLocalStorage\", name);\n  }, [name]);\n  // const onChange = (e) => setName(e.target.name);\n  const [score, setScore] = useState(0);\n  // const [type, setType] = useState(\"\");\n\n  // GET the questions from API\n  const fetchQuestions = async (\n    category = \"\",\n    difficulty = \"\",\n    type = \"\"\n  ) => {\n    const { data } = await axios.get(\n      `https://opentdb.com/api.php?amount=10${\n        category && `&category=${category}`\n      }${difficulty && `&difficulty=${difficulty}`}${type && `&type=${type}`}`\n    );\n    setQuestions(data.results);\n    // console.log(data);\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <div className=\"Game\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Home\n                  name={name}\n                  setName={setName}\n                  // type={setType}\n                  fetchQuestions={fetchQuestions}\n                />\n              }\n            />\n            <Route\n              exact\n              path=\"/quiz\"\n              element={\n                <Game\n                  name={name}\n                  questions={questions}\n                  score={score}\n                  setScore={setScore}\n                  // setQuestions={setQuestions}\n                />\n              }\n            />\n            <Route\n              exact\n              path=\"/result\"\n              element={<Result name={name} score={score} />}\n            />\n          </Switch>\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}